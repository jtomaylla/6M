
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 22/10/2014 - 7:48
// This is a partial class file. The other one is TASK_ATTACHMENTMapper.Auto.cs
// You can edit this file as your wish.
//------------------------------------------------------------------------------

using SISMONRules.Objects;
using SISMONRules.Entities;
using Cooperator.Framework.Core;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using System.Data.Common;
using System.Reflection;
using System;

namespace SISMONRules.Mappers
{

    /// <summary>
    /// Mapper for TASK_ATTACHMENT entity
    /// This class provide persistence methods for this entity
    /// </summary>
    public partial class TASK_ATTACHMENTMapper
    {
        // /// <summary>
        // /// Enables GetObjectBySQLText and GetObjectListBySQLText methods.
        // /// </summary>
        //protected override bool SQLQueriesEnabled()
        //{
        //    return true;
        //}

        // /// <summary>
        // /// Checks for security ritghs
        // /// </summary>
        //protected override bool CheckForSecurityRights(SecurityRights action, TASK_ATTACHMENTList ObjectListOrEntityList)
        //{
        //    switch (action)
        //    {
        //        case SecurityRights.Read:
        //            return true;
        //        case SecurityRights.Insert:
        //            return true;
        //        case SecurityRights.Update:
        //            return true;
        //        case SecurityRights.Delete:
        //            return true;
        //    }
        //    return false;
        //}

        public TASK_ATTACHMENTList GetAllByTaskConfiguration(int Id_Task_Configuration)
        {
            try
            {
                TASK_ATTACHMENTList lista = new TASK_ATTACHMENTList();
                DbDataReader dr;
                dr = TASK_ATTACHMENTMapper.Instance().GetAllByConfiguration(Id_Task_Configuration);
                while (dr.Read())
                {
                    TASK_ATTACHMENT item = new TASK_ATTACHMENT(Convert.ToInt32(dr["Id_Task_Attachment"]));
                    item.Id_Task_Configuration = Convert.ToInt32(dr["Id_Task_Configuration"]);
                    item.Id_Resource = Convert.ToInt32(dr["Id_Resource"]);
                    item.File_Name = Convert.ToString(dr["File_Name"]);
                    item.USERString = Convert.ToString(dr["Full_Name"]);
                    item.Document_Title = Convert.ToString(dr["Document_Title"]);
                    item.Required = Convert.ToBoolean(dr["Required"]) ? "Si" : "No";
                    //if (!dr.IsDBNull(dr.GetOrdinal("RazSocProveedor"))) item.RazSocProveedor = Convert.ToString(dr["RazSocProveedor"]);
                    lista.Add(item);
                }
                dr.Close();
                return lista;
            }
            catch (Exception ex)
            {
                throw ex;
            }

        }

    }

}


namespace SISMONRules.Loaders
{

    /// <summary>
    /// Loader for TASK_ATTACHMENT entity
    /// This class provide get methods for this entity
    /// </summary>
    public partial class TASK_ATTACHMENTLoader
    {
    }

}



