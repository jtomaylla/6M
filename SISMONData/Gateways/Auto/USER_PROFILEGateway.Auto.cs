
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is USER_PROFILEGateway.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using SISMONRules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data;
using System.Data.Common;
using System.Reflection;
using System.Web;




namespace SISMONRules.Gateways
{

    public partial class USER_PROFILEGateway : BaseGateway<USER_PROFILEObject, USER_PROFILEObjectList>, IGenericGateway
    {

        #region "Singleton"

        static USER_PROFILEGateway _instance;

        private USER_PROFILEGateway()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        
        
        public static USER_PROFILEGateway Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new USER_PROFILEGateway();
                else {
                    USER_PROFILEGateway inst = HttpContext.Current.Items["SISMONRules.USER_PROFILEGatewaySingleton"] as USER_PROFILEGateway;
                    if (inst == null) {
                        inst = new USER_PROFILEGateway();
                        HttpContext.Current.Items.Add("SISMONRules.USER_PROFILEGatewaySingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }

        #endregion

        /// <summary>
        /// Return the mapped table name
        /// </summary>
        protected override string TableName
        {
            get { return "USER_PROFILE"; }
        }

        protected override string RuleName
        {
            get {return typeof(USER_PROFILEGateway).FullName;}
        }


        

        /// <summary>
        /// Assign properties values based on DataReader
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, USER_PROFILEObject entity)
        {
            
            IMappeableUSER_PROFILEObject USER_PROFILE = (IMappeableUSER_PROFILEObject)entity;
            USER_PROFILE.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
(reader.IsDBNull(2)) ? "" : reader.GetString(2));
            ((IObject)entity).State = ObjectState.Restored;
        }

        /// <summary>
        /// Get field values to call insertion stored procedure
        /// </summary>
        protected override object[] GetFieldsForInsert(USER_PROFILEObject entity)
        {

            IMappeableUSER_PROFILEObject USER_PROFILE = (IMappeableUSER_PROFILEObject)entity;
            return USER_PROFILE.GetFieldsForInsert();
        }

        /// <summary>
        /// Get field values to call update stored procedure
        /// </summary>
        protected override object[] GetFieldsForUpdate(USER_PROFILEObject entity)
        {

            IMappeableUSER_PROFILEObject USER_PROFILE = (IMappeableUSER_PROFILEObject)entity;
            return USER_PROFILE.GetFieldsForUpdate();
        }

        /// <summary>
        /// Get field values to call deletion stored procedure
        /// </summary>
        protected override object[] GetFieldsForDelete(USER_PROFILEObject entity)
        {

            IMappeableUSER_PROFILEObject USER_PROFILE = (IMappeableUSER_PROFILEObject)entity;
            return USER_PROFILE.GetFieldsForDelete();
        }

        /// <summary>
        /// Raised after insert and update. Update properties from Output parameters
        /// </summary>
        protected override void UpdateObjectFromOutputParams(USER_PROFILEObject row, object[] parameters)
        {
            ((IMappeableUSER_PROFILEObject) row).UpdateObjectFromOutputParams(parameters);
            ((IObject)row).State = ObjectState.Restored;
        }

        /// <summary>
        /// StoredProceduresPrefix, for example: coop_
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "sm_";
        }


        /// <summary>
        /// Get a USER_PROFILEObject by execute a SQL Query Text
        /// </summary>
        public USER_PROFILEObject GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a USER_PROFILEObjectList by execute a SQL Query Text
        /// </summary>
        public USER_PROFILEObjectList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// Get a USER_PROFILEObject by calling a Stored Procedure
        /// </summary>
        public USER_PROFILEObject GetOne(System.Int32 Id_Profile, System.Int32 Id_User)
        {
            return base.GetOne(new USER_PROFILEObject(Id_Profile, Id_User));
        }


        // GetBy Objects and Params
                                    
        /// <summary>
        /// Get a USER_PROFILEObject by calling a Stored Procedure
        /// </summary>
        public USER_PROFILEObject GetOne(IUniqueIdentifiable PROFILE, System.Int32 Id_User)
        {
        return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "USER_PROFILE_GetOne",  UniqueIdentifierHelper.ComposeIdentifier(PROFILE, Id_User));
        }   
                        


        

        /// <summary>
        /// Get a USER_PROFILEObjectList by calling a Stored Procedure
        /// </summary>
        public USER_PROFILEObjectList GetByPROFILE(DbTransaction transaction,System.Int32 Id_Profile)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "USER_PROFILE_GetByPROFILE", Id_Profile);
        }

        /// <summary>
        /// Get a USER_PROFILEObjectList by calling a Stored Procedure
        /// </summary>
        public USER_PROFILEObjectList GetByPROFILE(DbTransaction transaction, IUniqueIdentifiable PROFILE)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "USER_PROFILE_GetByPROFILE", PROFILE.Identifier());
        }

    

        /// <summary>
        /// Get a USER_PROFILEObjectList by calling a Stored Procedure
        /// </summary>
        public USER_PROFILEObjectList GetByUSER(DbTransaction transaction,System.Int32 Id_User)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "USER_PROFILE_GetByUSER", Id_User);
        }

        /// <summary>
        /// Get a USER_PROFILEObjectList by calling a Stored Procedure
        /// </summary>
        public USER_PROFILEObjectList GetByUSER(DbTransaction transaction, IUniqueIdentifiable USER)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "USER_PROFILE_GetByUSER", USER.Identifier());
        }

    

        

        /// <summary>
        /// Get a USER_PROFILEObjectList by calling a Stored Procedure
        /// </summary>
        public USER_PROFILEObjectList GetByPROFILE(System.Int32 Id_Profile)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "USER_PROFILE_GetByPROFILE", Id_Profile);
        }

        /// <summary>
        /// Get a USER_PROFILEObjectList by calling a Stored Procedure
        /// </summary>
        public USER_PROFILEObjectList GetByPROFILE(IUniqueIdentifiable PROFILE)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "USER_PROFILE_GetByPROFILE", PROFILE.Identifier());
        }

    

        /// <summary>
        /// Get a USER_PROFILEObjectList by calling a Stored Procedure
        /// </summary>
        public USER_PROFILEObjectList GetByUSER(System.Int32 Id_User)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "USER_PROFILE_GetByUSER", Id_User);
        }

        /// <summary>
        /// Get a USER_PROFILEObjectList by calling a Stored Procedure
        /// </summary>
        public USER_PROFILEObjectList GetByUSER(IUniqueIdentifiable USER)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "USER_PROFILE_GetByUSER", USER.Identifier());
        }

    

        /// <summary>
        /// Delete USER_PROFILE
        /// </summary>
        public void Delete(System.Int32 Id_Profile, System.Int32 Id_User)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "USER_PROFILE_Delete", Id_Profile, Id_User);
        }

        /// <summary>
        /// Delete USER_PROFILE
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 Id_Profile, System.Int32 Id_User)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "USER_PROFILE_Delete", Id_Profile, Id_User);
        }

                                    
        /// <summary>
        /// Delete USER_PROFILE
        /// </summary>
        public void Delete(IUniqueIdentifiable PROFILE, System.Int32 Id_User)
        {
        base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "USER_PROFILE_Delete",  UniqueIdentifierHelper.ComposeIdentifier(PROFILE, Id_User));
        }   
        /// <summary>
        /// Delete USER_PROFILE
        /// </summary>
        public void Delete(DbTransaction transaction, IUniqueIdentifiable PROFILE, System.Int32 Id_User)
        {
        base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "USER_PROFILE_Delete",  UniqueIdentifierHelper.ComposeIdentifier(PROFILE, Id_User));
        }   
                        

        

        /// <summary>
        /// Delete USER_PROFILE by PROFILE
        /// </summary>
        public void DeleteByPROFILE(System.Int32 Id_Profile)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "USER_PROFILE_DeleteByPROFILE", Id_Profile);
        }

        /// <summary>
        /// Delete USER_PROFILE by PROFILE
        /// </summary>
        public void DeleteByPROFILE(DbTransaction transaction, System.Int32 Id_Profile)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "USER_PROFILE_DeleteByPROFILE", Id_Profile);
        }

        /// <summary>
        /// Delete USER_PROFILE by PROFILE
        /// </summary>
        public void DeleteByPROFILE(IUniqueIdentifiable PROFILE)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "USER_PROFILE_DeleteByPROFILE", PROFILE.Identifier());
        }

        /// <summary>
        /// Delete USER_PROFILE by PROFILE
        /// </summary>
        public void DeleteByPROFILE(DbTransaction transaction, IUniqueIdentifiable PROFILE)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "USER_PROFILE_DeleteByPROFILE", PROFILE.Identifier());
        }


    

        /// <summary>
        /// Delete USER_PROFILE by USER
        /// </summary>
        public void DeleteByUSER(System.Int32 Id_User)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "USER_PROFILE_DeleteByUSER", Id_User);
        }

        /// <summary>
        /// Delete USER_PROFILE by USER
        /// </summary>
        public void DeleteByUSER(DbTransaction transaction, System.Int32 Id_User)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "USER_PROFILE_DeleteByUSER", Id_User);
        }

        /// <summary>
        /// Delete USER_PROFILE by USER
        /// </summary>
        public void DeleteByUSER(IUniqueIdentifiable USER)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "USER_PROFILE_DeleteByUSER", USER.Identifier());
        }

        /// <summary>
        /// Delete USER_PROFILE by USER
        /// </summary>
        public void DeleteByUSER(DbTransaction transaction, IUniqueIdentifiable USER)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "USER_PROFILE_DeleteByUSER", USER.Identifier());
        }


    


        //Database Queries 
        
            

        /// <summary>
        /// 
        /// </summary>
        public System.Int32 DeleteByUser(System.Int32 Id_User) {
            
            return (System.Int32) base.DataBaseHelper.ExecuteScalarByStoredProcedure(StoredProceduresPrefix() + "USER_PROFILE_DeleteByUser" , Id_User);
            
        }

        
        /// <summary>
        /// 
        /// </summary>
        public System.Int32 DeleteByUser(DbTransaction transaction , System.Int32 Id_User) {
            
            return (System.Int32) base.DataBaseHelper.ExecuteScalarByStoredProcedure(transaction, StoredProceduresPrefix() + "USER_PROFILE_DeleteByUser" , Id_User);
            
        }


        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }

}








