
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is PERMISSIONObject.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using Cooperator.Framework.Core;
using System;

namespace SISMONRules.Objects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class PERMISSIONObject : BaseObject, IMappeablePERMISSIONObject, IUniqueIdentifiable, IEquatable<PERMISSIONObject>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public PERMISSIONObject(): base()
        {


        }

        /// <summary>
        /// 
        /// </summary>
        public PERMISSIONObject(
			System.Int32 Id_Project, System.Int32 Id_User): base()
        {

			_Id_Project = Id_Project;
			_Id_User = Id_User;

            Initialized();
        }

        
        /// <summary>
        /// 
        /// </summary>
        public PERMISSIONObject(
			System.Int32 Id_Project,
			System.Int32 Id_User,
			System.String PROJECTString,
			System.String USERString): base()
        {

			_Id_Project = Id_Project;
			_Id_User = Id_User;
			_PROJECTString = PROJECTString;
			_USERString = USERString;

            Initialized();
        }
        

        #endregion

        #region "Events"
        
        
        /// <summary>
        /// 
        /// </summary>
        public event EventHandler<DescriptionFieldEventArg> Update_PROJECTString;
        
        /// <summary>
        /// 
        /// </summary>
        public event EventHandler<DescriptionFieldEventArg> Update_USERString;
        
        #endregion

        #region "Fields"

            /// <summary>
/// 
/// </summary>
protected System.Int32 _Id_Project;
/// <summary>
/// 
/// </summary>
protected System.Int32 _Id_User;
/// <summary>
/// 
/// </summary>
protected System.String _PROJECTString;
/// <summary>
/// 
/// </summary>
protected System.String _USERString;

        #endregion

        #region "Properties"
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Id_Project
        {
            get
            {
                return _Id_Project;
            }
            
            set
            {
                base.PropertyModified();
                _Id_Project = value;
                                
                if (Update_PROJECTString != null)
                {
                    DescriptionFieldEventArg e = new DescriptionFieldEventArg(new PROJECTObject (_Id_Project));
                    Update_PROJECTString(this, e);
                    _PROJECTString = e.DescriptionString;
                }                
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Id_User
        {
            get
            {
                return _Id_User;
            }
            
            set
            {
                base.PropertyModified();
                _Id_User = value;
                                
                if (Update_USERString != null)
                {
                    DescriptionFieldEventArg e = new DescriptionFieldEventArg(new USERObject (_Id_User));
                    Update_USERString(this, e);
                    _USERString = e.DescriptionString;
                }                
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String PROJECTString
        {
            get
            {
                return _PROJECTString;
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String USERString
        {
            get
            {
                return _USERString;
            }
            
        }
        
        #endregion

        
            
                
        /// <summary>
        /// 
        /// </summary>
        protected override void SetOriginalValue()
        {
            base._OriginalValue = (IObject) this.MemberwiseClone();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            PERMISSIONObject newObject;
            PERMISSIONObject newOriginalValue;

            newObject = (PERMISSIONObject) this.MemberwiseClone();
            if (base._OriginalValue != null)
            {
                newOriginalValue = (PERMISSIONObject)this.OriginalValue().MemberwiseClone();
                newObject._OriginalValue = newOriginalValue;
            }
            return newObject;
        }


        /// <summary>
        /// Returns de original value of object since was created or restored.
        /// </summary>
        public new PERMISSIONObject OriginalValue()
        {
            return (PERMISSIONObject)base.OriginalValue();
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeablePERMISSIONObject.HydrateFields(
			System.Int32 Id_Project,
			System.Int32 Id_User,
			System.String PROJECTString,
			System.String USERString)
        {
        _Id_Project = Id_Project;
_Id_User = Id_User;
_PROJECTString = PROJECTString;
_USERString = USERString;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeablePERMISSIONObject.GetFieldsForInsert()
        {
            object[] _myArray = new object[2];
            _myArray[0] = _Id_Project;
_myArray[1] = _Id_User;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeablePERMISSIONObject.GetFieldsForUpdate()
        {
            
            object[] _myArray = new object[4];
            _myArray[0] = _Id_Project;
_myArray[1] = _Id_User;
_myArray[2] = this.OriginalValue()._Id_Project;
_myArray[3] = this.OriginalValue()._Id_User;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeablePERMISSIONObject.GetFieldsForDelete()
        {
            
            object[] _myArray = new object[2];
            _myArray[0] = _Id_Project;
_myArray[1] = _Id_User;

            return _myArray;
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeablePERMISSIONObject.UpdateObjectFromOutputParams(object[] parameters){
            // Update properties from Output parameters
            
        }


        /// <summary>
        /// 
        /// </summary>
        object[] IUniqueIdentifiable.Identifier()
        {
            PERMISSIONObject o = null;
            if (ObjectStateHelper.IsModified(this))
                o = this.OriginalValue();
            else
                o = this;

            return new object[]
            {o.Id_Project, o.Id_User};
        }


        /// <summary>
        /// 
        /// </summary>
        public bool Equals(PERMISSIONObject other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeablePERMISSIONObject
    {
        /// <summary>
        /// 
        /// </summary>
        void HydrateFields(System.Int32 Id_Project, 
			System.Int32 Id_User, 
			System.String PROJECTString, 
			System.String USERString);

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForInsert();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForUpdate();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForDelete();

        /// <summary>
        /// 
        /// </summary>
        void UpdateObjectFromOutputParams(object[] parameters);
    }

    /// <summary>
    /// 
    /// </summary>
    public partial class PERMISSIONObjectList : ObjectList<PERMISSIONObject>
    {
    }
}

namespace SISMONRules.Views
{
    /// <summary>
    /// 
    /// </summary>
    public partial class PERMISSIONObjectListView
        : ObjectListView<Objects.PERMISSIONObject>
    {
        /// <summary>
        /// 
        /// </summary>
        public PERMISSIONObjectListView(Objects.PERMISSIONObjectList list): base(list)
        {
        }
    }
}


