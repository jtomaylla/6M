
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is TASK_CONFIGURATIONObject.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using Cooperator.Framework.Core;
using System;

namespace SISMONRules.Objects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class TASK_CONFIGURATIONObject : BaseObject, IMappeableTASK_CONFIGURATIONObject, IUniqueIdentifiable, IEquatable<TASK_CONFIGURATIONObject>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public TASK_CONFIGURATIONObject(): base()
        {

			_Id_Task_Configuration =  ValuesGenerator.GetInt32;

        }

        /// <summary>
        /// 
        /// </summary>
        public TASK_CONFIGURATIONObject(
			System.Int32 Id_Task_Configuration): base()
        {

			_Id_Task_Configuration = Id_Task_Configuration;

            Initialized();
        }

        
        /// <summary>
        /// 
        /// </summary>
        public TASK_CONFIGURATIONObject(
			System.Int32 Id_Task_Configuration,
			System.Int32 Id_Task,
			System.String Document_Title,
			System.Boolean Required,
			System.Byte Id_Status): base()
        {

			_Id_Task_Configuration = Id_Task_Configuration;
			_Id_Task = Id_Task;
			_Document_Title = Document_Title;
			_Required = Required;
			_Id_Status = Id_Status;

            Initialized();
        }
        

        #endregion

        #region "Events"
        
        
        #endregion

        #region "Fields"

            /// <summary>
/// 
/// </summary>
protected System.Int32 _Id_Task_Configuration;
/// <summary>
/// 
/// </summary>
protected System.Int32 _Id_Task;
/// <summary>
/// 
/// </summary>
protected System.String _Document_Title;
/// <summary>
/// 
/// </summary>
protected System.Boolean _Required;
/// <summary>
/// 
/// </summary>
protected System.Byte _Id_Status;

        #endregion

        #region "Properties"
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Id_Task_Configuration
        {
            get
            {
                return _Id_Task_Configuration;
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Id_Task
        {
            get
            {
                return _Id_Task;
            }
            
            set
            {
                base.PropertyModified();
                _Id_Task = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Document_Title
        {
            get
            {
                return _Document_Title;
            }
            
            set
            {
                base.PropertyModified();
                _Document_Title = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Boolean Required
        {
            get
            {
                return _Required;
            }
            
            set
            {
                base.PropertyModified();
                _Required = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Byte Id_Status
        {
            get
            {
                return _Id_Status;
            }
            
            set
            {
                base.PropertyModified();
                _Id_Status = value;
                
            }
            
        }
        
        #endregion

        
            
                
        /// <summary>
        /// 
        /// </summary>
        protected override void SetOriginalValue()
        {
            base._OriginalValue = (IObject) this.MemberwiseClone();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            TASK_CONFIGURATIONObject newObject;
            TASK_CONFIGURATIONObject newOriginalValue;

            newObject = (TASK_CONFIGURATIONObject) this.MemberwiseClone();
            if (base._OriginalValue != null)
            {
                newOriginalValue = (TASK_CONFIGURATIONObject)this.OriginalValue().MemberwiseClone();
                newObject._OriginalValue = newOriginalValue;
            }
            return newObject;
        }


        /// <summary>
        /// Returns de original value of object since was created or restored.
        /// </summary>
        public new TASK_CONFIGURATIONObject OriginalValue()
        {
            return (TASK_CONFIGURATIONObject)base.OriginalValue();
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableTASK_CONFIGURATIONObject.HydrateFields(
			System.Int32 Id_Task_Configuration,
			System.Int32 Id_Task,
			System.String Document_Title,
			System.Boolean Required,
			System.Byte Id_Status)
        {
        _Id_Task_Configuration = Id_Task_Configuration;
_Id_Task = Id_Task;
_Document_Title = Document_Title;
_Required = Required;
_Id_Status = Id_Status;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableTASK_CONFIGURATIONObject.GetFieldsForInsert()
        {
            object[] _myArray = new object[5];
            _myArray[0] = _Id_Task_Configuration;
_myArray[1] = _Id_Task;
_myArray[2] = _Document_Title;
_myArray[3] = _Required;
_myArray[4] = _Id_Status;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableTASK_CONFIGURATIONObject.GetFieldsForUpdate()
        {
            
            object[] _myArray = new object[5];
            _myArray[0] = _Id_Task_Configuration;
_myArray[1] = _Id_Task;
_myArray[2] = _Document_Title;
_myArray[3] = _Required;
_myArray[4] = _Id_Status;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableTASK_CONFIGURATIONObject.GetFieldsForDelete()
        {
            
            object[] _myArray = new object[1];
            _myArray[0] = _Id_Task_Configuration;

            return _myArray;
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableTASK_CONFIGURATIONObject.UpdateObjectFromOutputParams(object[] parameters){
            // Update properties from Output parameters
            _Id_Task_Configuration = (System.Int32) parameters[0];

        }


        /// <summary>
        /// 
        /// </summary>
        object[] IUniqueIdentifiable.Identifier()
        {
            TASK_CONFIGURATIONObject o = null;
            if (ObjectStateHelper.IsModified(this))
                o = this.OriginalValue();
            else
                o = this;

            return new object[]
            {o.Id_Task_Configuration};
        }


        /// <summary>
        /// 
        /// </summary>
        public bool Equals(TASK_CONFIGURATIONObject other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableTASK_CONFIGURATIONObject
    {
        /// <summary>
        /// 
        /// </summary>
        void HydrateFields(System.Int32 Id_Task_Configuration, 
			System.Int32 Id_Task, 
			System.String Document_Title, 
			System.Boolean Required, 
			System.Byte Id_Status);

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForInsert();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForUpdate();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForDelete();

        /// <summary>
        /// 
        /// </summary>
        void UpdateObjectFromOutputParams(object[] parameters);
    }

    /// <summary>
    /// 
    /// </summary>
    public partial class TASK_CONFIGURATIONObjectList : ObjectList<TASK_CONFIGURATIONObject>
    {
    }
}

namespace SISMONRules.Views
{
    /// <summary>
    /// 
    /// </summary>
    public partial class TASK_CONFIGURATIONObjectListView
        : ObjectListView<Objects.TASK_CONFIGURATIONObject>
    {
        /// <summary>
        /// 
        /// </summary>
        public TASK_CONFIGURATIONObjectListView(Objects.TASK_CONFIGURATIONObjectList list): base(list)
        {
        }
    }
}


