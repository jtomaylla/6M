
        
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is ALERTObject.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using Cooperator.Framework.Core;
using System;

namespace SISMONRules.Objects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class ALERTObject : BaseObject, IMappeableALERTObject, IUniqueIdentifiable, IEquatable<ALERTObject>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public ALERTObject(): base()
        {

			_Id_Alert =  ValuesGenerator.GetInt32;

        }

        /// <summary>
        /// 
        /// </summary>
        public ALERTObject(
			System.Int32 Id_Alert): base()
        {

			_Id_Alert = Id_Alert;

            Initialized();
        }

        
        /// <summary>
        /// 
        /// </summary>
        public ALERTObject(
			System.Int32 Id_Alert,
			System.Int32 Id_Alert_Type,
			System.Int32 Days_From_Start,
			System.Decimal Cost_Percent): base()
        {

			_Id_Alert = Id_Alert;
			_Id_Alert_Type = Id_Alert_Type;
			_Days_From_Start = Days_From_Start;
			_Cost_Percent = Cost_Percent;

            Initialized();
        }
        

        #endregion

        #region "Events"
        
        
        #endregion

        #region "Fields"

            /// <summary>
/// 
/// </summary>
protected System.Int32 _Id_Alert;
/// <summary>
/// 
/// </summary>
protected System.Int32 _Id_Alert_Type;
/// <summary>
/// 
/// </summary>
protected System.Int32 _Days_From_Start;
/// <summary>
/// 
/// </summary>
protected System.Decimal _Cost_Percent;

        #endregion

        #region "Properties"
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Id_Alert
        {
            get
            {
                return _Id_Alert;
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Id_Alert_Type
        {
            get
            {
                return _Id_Alert_Type;
            }
            
            set
            {
                base.PropertyModified();
                _Id_Alert_Type = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Days_From_Start
        {
            get
            {
                return _Days_From_Start;
            }
            
            set
            {
                base.PropertyModified();
                _Days_From_Start = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Decimal Cost_Percent
        {
            get
            {
                return _Cost_Percent;
            }
            
            set
            {
                base.PropertyModified();
                _Cost_Percent = value;
                
            }
            
        }
        
        #endregion

        
            
                
        /// <summary>
        /// 
        /// </summary>
        protected override void SetOriginalValue()
        {
            base._OriginalValue = (IObject) this.MemberwiseClone();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            ALERTObject newObject;
            ALERTObject newOriginalValue;

            newObject = (ALERTObject) this.MemberwiseClone();
            if (base._OriginalValue != null)
            {
                newOriginalValue = (ALERTObject)this.OriginalValue().MemberwiseClone();
                newObject._OriginalValue = newOriginalValue;
            }
            return newObject;
        }


        /// <summary>
        /// Returns de original value of object since was created or restored.
        /// </summary>
        public new ALERTObject OriginalValue()
        {
            return (ALERTObject)base.OriginalValue();
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableALERTObject.HydrateFields(
			System.Int32 Id_Alert,
			System.Int32 Id_Alert_Type,
			System.Int32 Days_From_Start,
			System.Decimal Cost_Percent)
        {
        _Id_Alert = Id_Alert;
_Id_Alert_Type = Id_Alert_Type;
_Days_From_Start = Days_From_Start;
_Cost_Percent = Cost_Percent;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableALERTObject.GetFieldsForInsert()
        {
            object[] _myArray = new object[4];
            _myArray[0] = _Id_Alert;
_myArray[1] = _Id_Alert_Type;
_myArray[2] = _Days_From_Start;
_myArray[3] = _Cost_Percent;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableALERTObject.GetFieldsForUpdate()
        {
            
            object[] _myArray = new object[4];
            _myArray[0] = _Id_Alert;
_myArray[1] = _Id_Alert_Type;
_myArray[2] = _Days_From_Start;
_myArray[3] = _Cost_Percent;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableALERTObject.GetFieldsForDelete()
        {
            
            object[] _myArray = new object[1];
            _myArray[0] = _Id_Alert;

            return _myArray;
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableALERTObject.UpdateObjectFromOutputParams(object[] parameters){
            // Update properties from Output parameters
            _Id_Alert = (System.Int32) parameters[0];

        }


        /// <summary>
        /// 
        /// </summary>
        object[] IUniqueIdentifiable.Identifier()
        {
            ALERTObject o = null;
            if (ObjectStateHelper.IsModified(this))
                o = this.OriginalValue();
            else
                o = this;

            return new object[]
            {o.Id_Alert};
        }


        /// <summary>
        /// 
        /// </summary>
        public bool Equals(ALERTObject other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableALERTObject
    {
        /// <summary>
        /// 
        /// </summary>
        void HydrateFields(System.Int32 Id_Alert, 
			System.Int32 Id_Alert_Type, 
			System.Int32 Days_From_Start, 
			System.Decimal Cost_Percent);

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForInsert();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForUpdate();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForDelete();

        /// <summary>
        /// 
        /// </summary>
        void UpdateObjectFromOutputParams(object[] parameters);
    }

    /// <summary>
    /// 
    /// </summary>
    public partial class ALERTObjectList : ObjectList<ALERTObject>
    {
    }
}

namespace SISMONRules.Views
{
    /// <summary>
    /// 
    /// </summary>
    public partial class ALERTObjectListView
        : ObjectListView<Objects.ALERTObject>
    {
        /// <summary>
        /// 
        /// </summary>
        public ALERTObjectListView(Objects.ALERTObjectList list): base(list)
        {
        }
    }
}


