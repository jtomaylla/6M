
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is PROJECTObject.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using Cooperator.Framework.Core;
using System;

namespace SISMONRules.Objects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class PROJECTObject : BaseObject, IMappeablePROJECTObject, IUniqueIdentifiable, IEquatable<PROJECTObject>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public PROJECTObject(): base()
        {

			_Id_Project =  ValuesGenerator.GetInt32;

        }

        /// <summary>
        /// 
        /// </summary>
        public PROJECTObject(
			System.Int32 Id_Project): base()
        {

			_Id_Project = Id_Project;

            Initialized();
        }

        
        /// <summary>
        /// 
        /// </summary>
        public PROJECTObject(
			System.Int32 Id_Project,
			System.String Name,
			System.Int32 Id_Owner,
			System.Byte Id_Status,
			System.String STATUSString,
			System.String USERString): base()
        {

			_Id_Project = Id_Project;
			_Name = Name;
			_Id_Owner = Id_Owner;
			_Id_Status = Id_Status;
			_STATUSString = STATUSString;
			_USERString = USERString;

            Initialized();
        }
        

        #endregion

        #region "Events"
        
        
        /// <summary>
        /// 
        /// </summary>
        public event EventHandler<DescriptionFieldEventArg> Update_STATUSString;
        
        /// <summary>
        /// 
        /// </summary>
        public event EventHandler<DescriptionFieldEventArg> Update_USERString;
        
        #endregion

        #region "Fields"

            /// <summary>
/// 
/// </summary>
protected System.Int32 _Id_Project;
/// <summary>
/// 
/// </summary>
protected System.String _Name;
/// <summary>
/// 
/// </summary>
protected System.Int32 _Id_Owner;
/// <summary>
/// 
/// </summary>
protected System.Byte _Id_Status;
/// <summary>
/// 
/// </summary>
protected System.String _STATUSString;
/// <summary>
/// 
/// </summary>
protected System.String _USERString;

        #endregion

        #region "Properties"
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Id_Project
        {
            get
            {
                return _Id_Project;
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Name
        {
            get
            {
                return _Name;
            }
            
            set
            {
                base.PropertyModified();
                _Name = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Id_Owner
        {
            get
            {
                return _Id_Owner;
            }
            
            set
            {
                base.PropertyModified();
                _Id_Owner = value;
                                
                if (Update_USERString != null)
                {
                    DescriptionFieldEventArg e = new DescriptionFieldEventArg(new USERObject (_Id_Owner));
                    Update_USERString(this, e);
                    _USERString = e.DescriptionString;
                }                
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Byte Id_Status
        {
            get
            {
                return _Id_Status;
            }
            
            set
            {
                base.PropertyModified();
                _Id_Status = value;
                                
                if (Update_STATUSString != null)
                {
                    DescriptionFieldEventArg e = new DescriptionFieldEventArg(new STATUSObject (_Id_Status));
                    Update_STATUSString(this, e);
                    _STATUSString = e.DescriptionString;
                }                
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String STATUSString
        {
            get
            {
                return _STATUSString;
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String USERString
        {
            get
            {
                return _USERString;
            }
            
        }
        
        #endregion

        
            
                
        /// <summary>
        /// 
        /// </summary>
        protected override void SetOriginalValue()
        {
            base._OriginalValue = (IObject) this.MemberwiseClone();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            PROJECTObject newObject;
            PROJECTObject newOriginalValue;

            newObject = (PROJECTObject) this.MemberwiseClone();
            if (base._OriginalValue != null)
            {
                newOriginalValue = (PROJECTObject)this.OriginalValue().MemberwiseClone();
                newObject._OriginalValue = newOriginalValue;
            }
            return newObject;
        }


        /// <summary>
        /// Returns de original value of object since was created or restored.
        /// </summary>
        public new PROJECTObject OriginalValue()
        {
            return (PROJECTObject)base.OriginalValue();
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeablePROJECTObject.HydrateFields(
			System.Int32 Id_Project,
			System.String Name,
			System.Int32 Id_Owner,
			System.Byte Id_Status,
			System.String STATUSString,
			System.String USERString)
        {
        _Id_Project = Id_Project;
_Name = Name;
_Id_Owner = Id_Owner;
_Id_Status = Id_Status;
_STATUSString = STATUSString;
_USERString = USERString;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeablePROJECTObject.GetFieldsForInsert()
        {
            object[] _myArray = new object[4];
            _myArray[0] = _Id_Project;
_myArray[1] = _Name;
_myArray[2] = _Id_Owner;
_myArray[3] = _Id_Status;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeablePROJECTObject.GetFieldsForUpdate()
        {
            
            object[] _myArray = new object[4];
            _myArray[0] = _Id_Project;
_myArray[1] = _Name;
_myArray[2] = _Id_Owner;
_myArray[3] = _Id_Status;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeablePROJECTObject.GetFieldsForDelete()
        {
            
            object[] _myArray = new object[1];
            _myArray[0] = _Id_Project;

            return _myArray;
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeablePROJECTObject.UpdateObjectFromOutputParams(object[] parameters){
            // Update properties from Output parameters
            _Id_Project = (System.Int32) parameters[0];

        }


        /// <summary>
        /// 
        /// </summary>
        object[] IUniqueIdentifiable.Identifier()
        {
            PROJECTObject o = null;
            if (ObjectStateHelper.IsModified(this))
                o = this.OriginalValue();
            else
                o = this;

            return new object[]
            {o.Id_Project};
        }


        /// <summary>
        /// 
        /// </summary>
        public bool Equals(PROJECTObject other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeablePROJECTObject
    {
        /// <summary>
        /// 
        /// </summary>
        void HydrateFields(System.Int32 Id_Project, 
			System.String Name, 
			System.Int32 Id_Owner, 
			System.Byte Id_Status, 
			System.String STATUSString, 
			System.String USERString);

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForInsert();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForUpdate();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForDelete();

        /// <summary>
        /// 
        /// </summary>
        void UpdateObjectFromOutputParams(object[] parameters);
    }

    /// <summary>
    /// 
    /// </summary>
    public partial class PROJECTObjectList : ObjectList<PROJECTObject>
    {
    }
}

namespace SISMONRules.Views
{
    /// <summary>
    /// 
    /// </summary>
    public partial class PROJECTObjectListView
        : ObjectListView<Objects.PROJECTObject>
    {
        /// <summary>
        /// 
        /// </summary>
        public PROJECTObjectListView(Objects.PROJECTObjectList list): base(list)
        {
        }
    }
}


