
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 05/10/2014 - 06:22 p.m.
// This is a partial class file. The other one is ATTACHMENTObject.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using Cooperator.Framework.Core;
using System;

namespace SISMONRules.Objects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class ATTACHMENTObject : BaseObject, IMappeableATTACHMENTObject, IUniqueIdentifiable, IEquatable<ATTACHMENTObject>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public ATTACHMENTObject(): base()
        {


        }

        /// <summary>
        /// 
        /// </summary>
        public ATTACHMENTObject(
			System.Int32 Id_Attachment): base()
        {

			_Id_Attachment = Id_Attachment;

            Initialized();
        }

        
        /// <summary>
        /// 
        /// </summary>
        public ATTACHMENTObject(
			System.Int32 Id_Attachment,
			System.Int32 Id_Task,
			System.String Document_Title,
			System.String File_Name,
			System.Boolean Required,
			System.Byte Id_Status): base()
        {

			_Id_Attachment = Id_Attachment;
			_Id_Task = Id_Task;
			_Document_Title = Document_Title;
			_File_Name = File_Name;
			_Required = Required;
			_Id_Status = Id_Status;

            Initialized();
        }
        

        #endregion

        #region "Events"
        
        
        #endregion

        #region "Fields"

            /// <summary>
/// 
/// </summary>
protected System.Int32 _Id_Attachment;
/// <summary>
/// 
/// </summary>
protected System.Int32 _Id_Task;
/// <summary>
/// 
/// </summary>
protected System.String _Document_Title;
/// <summary>
/// 
/// </summary>
protected System.String _File_Name;
/// <summary>
/// 
/// </summary>
protected System.Boolean _Required;
/// <summary>
/// 
/// </summary>
protected System.Byte _Id_Status;

        #endregion

        #region "Properties"
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Id_Attachment
        {
            get
            {
                return _Id_Attachment;
            }
            
            set
            {
                base.PropertyModified();
                _Id_Attachment = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 Id_Task
        {
            get
            {
                return _Id_Task;
            }
            
            set
            {
                base.PropertyModified();
                _Id_Task = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Document_Title
        {
            get
            {
                return _Document_Title;
            }
            
            set
            {
                base.PropertyModified();
                _Document_Title = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String File_Name
        {
            get
            {
                return _File_Name;
            }
            
            set
            {
                base.PropertyModified();
                _File_Name = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Boolean Required
        {
            get
            {
                return _Required;
            }
            
            set
            {
                base.PropertyModified();
                _Required = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Byte Id_Status
        {
            get
            {
                return _Id_Status;
            }
            
            set
            {
                base.PropertyModified();
                _Id_Status = value;
                
            }
            
        }
        
        #endregion

        
            
                
        /// <summary>
        /// 
        /// </summary>
        protected override void SetOriginalValue()
        {
            base._OriginalValue = (IObject) this.MemberwiseClone();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            ATTACHMENTObject newObject;
            ATTACHMENTObject newOriginalValue;

            newObject = (ATTACHMENTObject) this.MemberwiseClone();
            if (base._OriginalValue != null)
            {
                newOriginalValue = (ATTACHMENTObject)this.OriginalValue().MemberwiseClone();
                newObject._OriginalValue = newOriginalValue;
            }
            return newObject;
        }


        /// <summary>
        /// Returns de original value of object since was created or restored.
        /// </summary>
        public new ATTACHMENTObject OriginalValue()
        {
            return (ATTACHMENTObject)base.OriginalValue();
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableATTACHMENTObject.HydrateFields(
			System.Int32 Id_Attachment,
			System.Int32 Id_Task,
			System.String Document_Title,
			System.String File_Name,
			System.Boolean Required,
			System.Byte Id_Status)
        {
        _Id_Attachment = Id_Attachment;
_Id_Task = Id_Task;
_Document_Title = Document_Title;
_File_Name = File_Name;
_Required = Required;
_Id_Status = Id_Status;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableATTACHMENTObject.GetFieldsForInsert()
        {
            object[] _myArray = new object[6];
            _myArray[0] = _Id_Attachment;
_myArray[1] = _Id_Task;
if (!System.String.IsNullOrEmpty(_Document_Title)) _myArray[2] = _Document_Title;
_myArray[3] = _File_Name;
_myArray[4] = _Required;
_myArray[5] = _Id_Status;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableATTACHMENTObject.GetFieldsForUpdate()
        {
            
            object[] _myArray = new object[7];
            _myArray[0] = _Id_Attachment;
_myArray[1] = _Id_Task;
if (!System.String.IsNullOrEmpty(_Document_Title)) _myArray[2] = _Document_Title;
_myArray[3] = _File_Name;
_myArray[4] = _Required;
_myArray[5] = _Id_Status;
_myArray[6] = this.OriginalValue()._Id_Attachment;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableATTACHMENTObject.GetFieldsForDelete()
        {
            
            object[] _myArray = new object[1];
            _myArray[0] = _Id_Attachment;

            return _myArray;
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableATTACHMENTObject.UpdateObjectFromOutputParams(object[] parameters){
            // Update properties from Output parameters
            
        }


        /// <summary>
        /// 
        /// </summary>
        object[] IUniqueIdentifiable.Identifier()
        {
            ATTACHMENTObject o = null;
            if (ObjectStateHelper.IsModified(this))
                o = this.OriginalValue();
            else
                o = this;

            return new object[]
            {o.Id_Attachment};
        }


        /// <summary>
        /// 
        /// </summary>
        public bool Equals(ATTACHMENTObject other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableATTACHMENTObject
    {
        /// <summary>
        /// 
        /// </summary>
        void HydrateFields(System.Int32 Id_Attachment, 
			System.Int32 Id_Task, 
			System.String Document_Title, 
			System.String File_Name, 
			System.Boolean Required, 
			System.Byte Id_Status);

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForInsert();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForUpdate();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForDelete();

        /// <summary>
        /// 
        /// </summary>
        void UpdateObjectFromOutputParams(object[] parameters);
    }

    /// <summary>
    /// 
    /// </summary>
    public partial class ATTACHMENTObjectList : ObjectList<ATTACHMENTObject>
    {
    }
}

namespace SISMONRules.Views
{
    /// <summary>
    /// 
    /// </summary>
    public partial class ATTACHMENTObjectListView
        : ObjectListView<Objects.ATTACHMENTObject>
    {
        /// <summary>
        /// 
        /// </summary>
        public ATTACHMENTObjectListView(Objects.ATTACHMENTObjectList list): base(list)
        {
        }
    }
}


