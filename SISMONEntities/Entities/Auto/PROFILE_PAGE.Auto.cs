
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is PROFILE_PAGEEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using SISMONRules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace SISMONRules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class PROFILE_PAGE : Objects.PROFILE_PAGEObject, IMappeablePROFILE_PAGE, IEquatable<PROFILE_PAGE>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public PROFILE_PAGE()
            :base()
        {
            
        }

        /// <summary>
        /// 
        /// </summary>
        public PROFILE_PAGE(
			System.Int32 Id_Profile, System.Int32 Id_Page)
            : base()
        {

			_Id_Profile = Id_Profile;
			_Id_Page = Id_Page;

            
            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public PROFILE_PAGE(
			System.Int32 Id_Profile,
			System.Int32 Id_Page,
			System.String PAGEString,
			System.String PROFILEString)
            : base()
        {

			_Id_Profile = Id_Profile;
			_Id_Page = Id_Page;
			_PAGEString = PAGEString;
			_PROFILEString = PROFILEString;

            
            Initialized();
        }
        
        #endregion

        #region "Fields"

        
        #endregion

        #region "Properties"
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new PROFILE_PAGE OriginalValue()
        {
            return (PROFILE_PAGE)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            PROFILE_PAGE newObject;            
            

            newObject = (PROFILE_PAGE)this.MemberwiseClone();
            // Entities
            
            // Colections
            
            // OriginalValue
            PROFILE_PAGE newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (PROFILE_PAGE)this.OriginalValue().MemberwiseClone();
                // Entities
                
                // Colections
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeablePROFILE_PAGE.CompleteEntity()
        {
        
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeablePROFILE_PAGE.SetFKValuesForChilds(PROFILE_PAGE entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(PROFILE_PAGE other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeablePROFILE_PAGE
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(PROFILE_PAGE entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class PROFILE_PAGEList : ObjectList<PROFILE_PAGE>
    {
    }
}
namespace SISMONRules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class PROFILE_PAGEListView
        : ObjectListView<Entities.PROFILE_PAGE>
    {
        /// <summary>
        /// 
        /// </summary>
        public PROFILE_PAGEListView(Entities.PROFILE_PAGEList list): base(list)
        {
        }
    }
}


