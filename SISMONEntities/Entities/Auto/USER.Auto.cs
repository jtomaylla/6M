
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is USEREntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using SISMONRules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace SISMONRules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class USER : Objects.USERObject, IMappeableUSER, IEquatable<USER>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public USER()
            :base()
        {
            if (_USER_PROFILECollection == null) _USER_PROFILECollection = new Entities.USER_PROFILEList();
if (_ORGANIZATIONEntity == null) _ORGANIZATIONEntity = new Objects.ORGANIZATIONObject();
if (_STATUSEntity == null) _STATUSEntity = new Objects.STATUSObject();

        }

        /// <summary>
        /// 
        /// </summary>
        public USER(
			System.Int32 Id_User)
            : base()
        {

			_Id_User = Id_User;

            if (_USER_PROFILECollection == null) _USER_PROFILECollection = new Entities.USER_PROFILEList();
if (_ORGANIZATIONEntity == null) _ORGANIZATIONEntity = new Objects.ORGANIZATIONObject();
if (_STATUSEntity == null) _STATUSEntity = new Objects.STATUSObject();

            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public USER(
			System.Int32 Id_User,
			System.String First_Name,
			System.String Surname1,
			System.String Surname2,
			System.String Full_Name,
			System.String Email,
			System.Byte[] PasswordHash,
			System.Boolean Must_Change_Password,
			System.Int32 Id_Organization,
			System.String UserName,
			System.Byte Id_Status,
			System.String STATUSString)
            : base()
        {

			_Id_User = Id_User;
			_First_Name = First_Name;
			_Surname1 = Surname1;
			_Surname2 = Surname2;
			_Full_Name = Full_Name;
			_Email = Email;
			_PasswordHash = PasswordHash;
			_Must_Change_Password = Must_Change_Password;
			_Id_Organization = Id_Organization;
			_UserName = UserName;
			_Id_Status = Id_Status;
			_STATUSString = STATUSString;

            if (_USER_PROFILECollection == null) _USER_PROFILECollection = new Entities.USER_PROFILEList();
if (_ORGANIZATIONEntity == null) _ORGANIZATIONEntity = new Objects.ORGANIZATIONObject();
if (_STATUSEntity == null) _STATUSEntity = new Objects.STATUSObject();

            Initialized();
        }
        
        #endregion

        #region "Fields"

        /// <summary>
/// 
/// </summary>
protected Entities.USER_PROFILEList _USER_PROFILECollection;
/// <summary>
/// 
/// </summary>
protected Objects.ORGANIZATIONObject _ORGANIZATIONEntity;
/// <summary>
/// 
/// </summary>
protected Objects.STATUSObject _STATUSEntity;

        #endregion

        #region "Properties"
        

        /// <summary>
        /// 
        /// </summary>
        public virtual Entities.USER_PROFILEList USER_PROFILECollection
        {
            get
            {
                if (_USER_PROFILECollection== null) {
  		 ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(USER_PROFILE));
 _USER_PROFILECollection = lazyProvider.GetList(typeof(USER_PROFILE), this) as USER_PROFILEList;
 }
                return _USER_PROFILECollection;
            }
            set
            {
                base.PropertyModified();
                _USER_PROFILECollection = value;
                
            }
        }
        
bool _ORGANIZATIONEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Objects.ORGANIZATIONObject ORGANIZATIONEntity
        {
            get
            {
                if (_ORGANIZATIONEntity== null  && ! _ORGANIZATIONEntityFetched ) {
_ORGANIZATIONEntityFetched = true;
Objects.ORGANIZATIONObject _ORGANIZATIONEntityTemp = new Objects.ORGANIZATIONObject(this.Id_Organization); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Objects.ORGANIZATIONObject));
 _ORGANIZATIONEntity = lazyProvider.GetEntity(typeof(Objects.ORGANIZATIONObject), _ORGANIZATIONEntityTemp) as Objects.ORGANIZATIONObject;
}

                return _ORGANIZATIONEntity;
            }
            set
            {
                base.PropertyModified();
                _ORGANIZATIONEntity = value;
                if (value != null) {
   _Id_Organization = value.Id_Organization;

} else {
   _Id_Organization = System.Int32.MinValue;

}

            }
        }
        
bool _STATUSEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Objects.STATUSObject STATUSEntity
        {
            get
            {
                if (_STATUSEntity== null  && ! _STATUSEntityFetched ) {
_STATUSEntityFetched = true;
Objects.STATUSObject _STATUSEntityTemp = new Objects.STATUSObject(this.Id_Status); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Objects.STATUSObject));
 _STATUSEntity = lazyProvider.GetEntity(typeof(Objects.STATUSObject), _STATUSEntityTemp) as Objects.STATUSObject;
}

                return _STATUSEntity;
            }
            set
            {
                base.PropertyModified();
                _STATUSEntity = value;
                if (value != null) {
   _Id_Status = value.Id_Status;
_STATUSString = value.Description;
} else {
   _Id_Status = System.Byte.MinValue;
_STATUSString = "";
}

            }
        }
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new USER OriginalValue()
        {
            return (USER)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            USER newObject;            
            SISMONRules.Entities.USER_PROFILEList newUSER_PROFILECollection;


            newObject = (USER)this.MemberwiseClone();
            // Entities
                         
            if (this._ORGANIZATIONEntity != null)
            {
                newObject._ORGANIZATIONEntity = (Objects.ORGANIZATIONObject)((ICloneable)this._ORGANIZATIONEntity).Clone();
            }
                         
            if (this._STATUSEntity != null)
            {
                newObject._STATUSEntity = (Objects.STATUSObject)((ICloneable)this._STATUSEntity).Clone();
            }
            
            // Colections
            
            if (this._USER_PROFILECollection != null)
            {
                
                newUSER_PROFILECollection = new SISMONRules.Entities.USER_PROFILEList();
                
                foreach (SISMONRules.Entities.USER_PROFILE row in this._USER_PROFILECollection)
                { 
                    newUSER_PROFILECollection.Add((SISMONRules.Entities.USER_PROFILE)((ICloneable) row).Clone());
                }
                newObject._USER_PROFILECollection = newUSER_PROFILECollection;
            }
            
            // OriginalValue
            USER newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (USER)this.OriginalValue().MemberwiseClone();
                // Entities
                             
                if (this.OriginalValue()._ORGANIZATIONEntity != null)
                {
                    newOriginalValue._ORGANIZATIONEntity = (Objects.ORGANIZATIONObject)((ICloneable)this.OriginalValue()._ORGANIZATIONEntity).Clone();
                }
                             
                if (this.OriginalValue()._STATUSEntity != null)
                {
                    newOriginalValue._STATUSEntity = (Objects.STATUSObject)((ICloneable)this.OriginalValue()._STATUSEntity).Clone();
                }
                
                // Colections
                
                if (this.OriginalValue()._USER_PROFILECollection != null)
                {
                    
                    newUSER_PROFILECollection = new SISMONRules.Entities.USER_PROFILEList();
                    
                    foreach (SISMONRules.Entities.USER_PROFILE row in this.OriginalValue()._USER_PROFILECollection)
                    {
                        newUSER_PROFILECollection.Add((SISMONRules.Entities.USER_PROFILE)((ICloneable)row).Clone());
                    }
                    newOriginalValue._USER_PROFILECollection = newUSER_PROFILECollection;
                }                
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeableUSER.CompleteEntity(Entities.USER_PROFILEList USER_PROFILECollection, Objects.ORGANIZATIONObject ORGANIZATIONEntity, Objects.STATUSObject STATUSEntity)
        {
        _USER_PROFILECollection = USER_PROFILECollection;
_ORGANIZATIONEntity = ORGANIZATIONEntity;
_STATUSEntity = STATUSEntity;
        }
        
        bool IMappeableUSER.IsUSER_PROFILECollectionNull()
        {
            return (_USER_PROFILECollection == null);
        }
        
        bool IMappeableUSER.IsORGANIZATIONEntityNull()
        {
            return (_ORGANIZATIONEntity == null);
        }
        
        bool IMappeableUSER.IsSTATUSEntityNull()
        {
            return (_STATUSEntity == null);
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeableUSER.SetFKValuesForChilds(USER entity)
        {
        
            if (_USER_PROFILECollection != null)
            {
                
                foreach (SISMONRules.Entities.USER_PROFILE item in _USER_PROFILECollection)
                {
                        
                        
                        
                        
                    if ( item.Id_User != entity.Id_User) item.Id_User = entity.Id_User;
                    
                }
            }
                    
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(USER other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableUSER
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity(Entities.USER_PROFILEList USER_PROFILECollection, Objects.ORGANIZATIONObject ORGANIZATIONEntity, Objects.STATUSObject STATUSEntity);
        
        /// <summary>
        /// 
        /// </summary>
        bool IsUSER_PROFILECollectionNull();
        
        /// <summary>
        /// 
        /// </summary>
        bool IsORGANIZATIONEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        bool IsSTATUSEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(USER entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class USERList : ObjectList<USER>
    {
    }
}
namespace SISMONRules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class USERListView
        : ObjectListView<Entities.USER>
    {
        /// <summary>
        /// 
        /// </summary>
        public USERListView(Entities.USERList list): base(list)
        {
        }
    }
}


