
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is MODULEEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using SISMONRules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace SISMONRules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class MODULE : Objects.MODULEObject, IMappeableMODULE, IEquatable<MODULE>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public MODULE()
            :base()
        {
            if (_STATUSEntity == null) _STATUSEntity = new Objects.STATUSObject();

        }

        /// <summary>
        /// 
        /// </summary>
        public MODULE(
			System.Byte Id_Module)
            : base()
        {

			_Id_Module = Id_Module;

            if (_STATUSEntity == null) _STATUSEntity = new Objects.STATUSObject();

            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public MODULE(
			System.Byte Id_Module,
			System.String Name,
			System.String Description,
			System.String URL,
			System.String Domain,
			System.Byte Id_Status,
			System.String STATUSString)
            : base()
        {

			_Id_Module = Id_Module;
			_Name = Name;
			_Description = Description;
			_URL = URL;
			_Domain = Domain;
			_Id_Status = Id_Status;
			_STATUSString = STATUSString;

            if (_STATUSEntity == null) _STATUSEntity = new Objects.STATUSObject();

            Initialized();
        }
        
        #endregion

        #region "Fields"

        /// <summary>
/// 
/// </summary>
protected Objects.STATUSObject _STATUSEntity;

        #endregion

        #region "Properties"
        
bool _STATUSEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Objects.STATUSObject STATUSEntity
        {
            get
            {
                if (_STATUSEntity== null  && ! _STATUSEntityFetched ) {
_STATUSEntityFetched = true;
Objects.STATUSObject _STATUSEntityTemp = new Objects.STATUSObject(this.Id_Status); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Objects.STATUSObject));
 _STATUSEntity = lazyProvider.GetEntity(typeof(Objects.STATUSObject), _STATUSEntityTemp) as Objects.STATUSObject;
}

                return _STATUSEntity;
            }
            set
            {
                base.PropertyModified();
                _STATUSEntity = value;
                if (value != null) {
   _Id_Status = value.Id_Status;
_STATUSString = value.Description;
} else {
   _Id_Status = System.Byte.MinValue;
_STATUSString = "";
}

            }
        }
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new MODULE OriginalValue()
        {
            return (MODULE)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            MODULE newObject;            
            

            newObject = (MODULE)this.MemberwiseClone();
            // Entities
                         
            if (this._STATUSEntity != null)
            {
                newObject._STATUSEntity = (Objects.STATUSObject)((ICloneable)this._STATUSEntity).Clone();
            }
            
            // Colections
            
            // OriginalValue
            MODULE newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (MODULE)this.OriginalValue().MemberwiseClone();
                // Entities
                             
                if (this.OriginalValue()._STATUSEntity != null)
                {
                    newOriginalValue._STATUSEntity = (Objects.STATUSObject)((ICloneable)this.OriginalValue()._STATUSEntity).Clone();
                }
                
                // Colections
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeableMODULE.CompleteEntity(Objects.STATUSObject STATUSEntity)
        {
        _STATUSEntity = STATUSEntity;
        }
        
        bool IMappeableMODULE.IsSTATUSEntityNull()
        {
            return (_STATUSEntity == null);
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeableMODULE.SetFKValuesForChilds(MODULE entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(MODULE other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableMODULE
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity(Objects.STATUSObject STATUSEntity);
        
        /// <summary>
        /// 
        /// </summary>
        bool IsSTATUSEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(MODULE entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class MODULEList : ObjectList<MODULE>
    {
    }
}
namespace SISMONRules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class MODULEListView
        : ObjectListView<Entities.MODULE>
    {
        /// <summary>
        /// 
        /// </summary>
        public MODULEListView(Entities.MODULEList list): base(list)
        {
        }
    }
}


