
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is PERMISSIONEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using SISMONRules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace SISMONRules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class PERMISSION : Objects.PERMISSIONObject, IMappeablePERMISSION, IEquatable<PERMISSION>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public PERMISSION()
            :base()
        {
            
        }

        /// <summary>
        /// 
        /// </summary>
        public PERMISSION(
			System.Int32 Id_Project, System.Int32 Id_User)
            : base()
        {

			_Id_Project = Id_Project;
			_Id_User = Id_User;

            
            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public PERMISSION(
			System.Int32 Id_Project,
			System.Int32 Id_User,
			System.String PROJECTString,
			System.String USERString)
            : base()
        {

			_Id_Project = Id_Project;
			_Id_User = Id_User;
			_PROJECTString = PROJECTString;
			_USERString = USERString;

            
            Initialized();
        }
        
        #endregion

        #region "Fields"

        
        #endregion

        #region "Properties"
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new PERMISSION OriginalValue()
        {
            return (PERMISSION)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            PERMISSION newObject;            
            

            newObject = (PERMISSION)this.MemberwiseClone();
            // Entities
            
            // Colections
            
            // OriginalValue
            PERMISSION newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (PERMISSION)this.OriginalValue().MemberwiseClone();
                // Entities
                
                // Colections
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeablePERMISSION.CompleteEntity()
        {
        
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeablePERMISSION.SetFKValuesForChilds(PERMISSION entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(PERMISSION other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeablePERMISSION
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(PERMISSION entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class PERMISSIONList : ObjectList<PERMISSION>
    {
    }
}
namespace SISMONRules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class PERMISSIONListView
        : ObjectListView<Entities.PERMISSION>
    {
        /// <summary>
        /// 
        /// </summary>
        public PERMISSIONListView(Entities.PERMISSIONList list): base(list)
        {
        }
    }
}


